// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List           = require("bs-platform/lib/js/list.js");
var Block          = require("bs-platform/lib/js/block.js");
var Curry          = require("bs-platform/lib/js/curry.js");
var Didact         = require("./didact/didact.bs.js");
var DidactDom      = require("./didact/didactDom.bs.js");
var Pervasives     = require("bs-platform/lib/js/pervasives.js");
var DidactElements = require("./didact/didactElements.bs.js");


  import "todomvc-common/base.css";

;

function createElement(_, _$1) {
  return Didact.component(/* record */[
              /* debugName */"Input",
              /* render */(function () {
                  return DidactElements.div(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* :: */[
                              DidactElements.input(/* None */0, /* Some */[(function (prim) {
                                        console.log(prim);
                                        return /* () */0;
                                      })], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* [] */0, /* () */0),
                              /* [] */0
                            ], /* () */0);
                }),
              /* initialState */(function () {
                  return 0;
                }),
              /* reducer */(function (_, _$1) {
                  return /* NoUpdate */0;
                })
            ]);
}

var Input = /* module */[/* createElement */createElement];

function createElement$1(_, _$1) {
  return Didact.component(/* record */[
              /* debugName */"TodoMVC",
              /* render */(function (self) {
                  var match = +(List.length(self[/* state */0][/* todos */0]) !== 0);
                  return DidactElements.div(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* :: */[
                              DidactElements.header(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */["header"], /* None */0, /* :: */[
                                    DidactElements.h1(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* :: */[
                                          Didact.stringToElement("todos"),
                                          /* [] */0
                                        ], /* () */0),
                                    /* :: */[
                                      DidactElements.input(/* None */0, /* Some */[(function (e) {
                                                console.log(e);
                                                return /* () */0;
                                              })], /* Some */[(function (prim) {
                                                console.log(prim);
                                                return /* () */0;
                                              })], /* None */0, /* Some */[self[/* state */0][/* newTodo */1]], /* Some */["new-todo"], /* Some */["What needs to be done?"], /* [] */0, /* () */0),
                                      /* [] */0
                                    ]
                                  ], /* () */0),
                              /* :: */[
                                DidactElements.button(/* Some */[(function () {
                                          return Curry._1(self[/* send */2], /* AddTodo */Block.__(0, [/* record */[
                                                          /* id */"blue",
                                                          /* title */"new todo added",
                                                          /* completed : false */0
                                                        ]]));
                                        })], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* :: */[
                                      Didact.stringToElement("Add todo"),
                                      /* [] */0
                                    ], /* () */0),
                                /* :: */[
                                  match !== 0 ? DidactElements.section(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */["main"], /* None */0, /* :: */[
                                          DidactElements.input(/* None */0, /* Some */[(function (prim) {
                                                    console.log(prim);
                                                    return /* () */0;
                                                  })], /* None */0, /* None */0, /* None */0, /* Some */["toggle-all"], /* None */0, /* [] */0, /* () */0),
                                          /* :: */[
                                            DidactElements.ul(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */["todo-list"], /* None */0, /* :: */[
                                                  Didact.listToElement(List.map((function (todo) {
                                                              return DidactElements.div(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* :: */[
                                                                          DidactElements.span(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* :: */[
                                                                                Didact.stringToElement(todo[/* title */1]),
                                                                                /* [] */0
                                                                              ], /* () */0),
                                                                          /* [] */0
                                                                        ], /* () */0);
                                                            }), self[/* state */0][/* todos */0])),
                                                  /* [] */0
                                                ], /* () */0),
                                            /* [] */0
                                          ]
                                        ], /* () */0) : Didact.nullElement,
                                  /* [] */0
                                ]
                              ]
                            ], /* () */0);
                }),
              /* initialState */(function () {
                  return /* record */[
                          /* todos : :: */[
                            /* record */[
                              /* id */"1",
                              /* title */"Make it work",
                              /* completed : true */1
                            ],
                            /* :: */[
                              /* record */[
                                /* id */"2",
                                /* title */"Make it correct",
                                /* completed : false */0
                              ],
                              /* :: */[
                                /* record */[
                                  /* id */"3",
                                  /* title */"Make it fast",
                                  /* completed : false */0
                                ],
                                /* [] */0
                              ]
                            ]
                          ],
                          /* newTodo */"",
                          /* editing */"",
                          /* nowShowing : All */0
                        ];
                }),
              /* reducer */(function (action, state) {
                  if (action.tag) {
                    return /* Update */[/* record */[
                              /* todos */state[/* todos */0],
                              /* newTodo */action[0],
                              /* editing */state[/* editing */2],
                              /* nowShowing */state[/* nowShowing */3]
                            ]];
                  } else {
                    return /* Update */[/* record */[
                              /* todos : :: */[
                                action[0],
                                state[/* todos */0]
                              ],
                              /* newTodo */state[/* newTodo */1],
                              /* editing */state[/* editing */2],
                              /* nowShowing */state[/* nowShowing */3]
                            ]];
                  }
                })
            ]);
}

var TodoMVC = /* module */[/* createElement */createElement$1];

function createElement$2(_, _$1) {
  return Didact.component(/* record */[
              /* debugName */"App",
              /* render */(function (param) {
                  var send = param[/* send */2];
                  return DidactElements.div(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* :: */[
                              DidactElements.button(/* Some */[(function () {
                                        return Curry._1(send, /* Increment */0);
                                      })], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* :: */[
                                    Didact.stringToElement("Increment"),
                                    /* [] */0
                                  ], /* () */0),
                              /* :: */[
                                DidactElements.h3(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* :: */[
                                      Didact.stringToElement(Pervasives.string_of_int(param[/* state */0])),
                                      /* [] */0
                                    ], /* () */0),
                                /* :: */[
                                  DidactElements.button(/* Some */[(function () {
                                            return Curry._1(send, /* Decrement */1);
                                          })], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* :: */[
                                        Didact.stringToElement("Decrement"),
                                        /* [] */0
                                      ], /* () */0),
                                  /* :: */[
                                    createElement(/* [] */0, /* () */0),
                                    /* [] */0
                                  ]
                                ]
                              ]
                            ], /* () */0);
                }),
              /* initialState */(function () {
                  return 0;
                }),
              /* reducer */(function (action, state) {
                  if (action !== 0) {
                    return /* Update */[state - 1 | 0];
                  } else {
                    return /* Update */[state + 1 | 0];
                  }
                })
            ]);
}

var App = /* module */[/* createElement */createElement$2];

var match = document.getElementById("container");

if (match !== null) {
  DidactDom.render(createElement$1(/* [] */0, /* () */0), match);
} else {
  console.log("No dom element found :(");
}

exports.Input   = Input;
exports.TodoMVC = TodoMVC;
exports.App     = App;
/*  Not a pure module */
